(define (domain hospital)

    (:types 
        room - object
        battery - object
        equipment - object
    )

    (:predicates 
        (equipmentok ?r - robot)
        (occupied ?rm - room)
        (batterybelow15 ?batt - battery)
    )

    (:functions
        (recharge ?batt - battery)
        (staphylococcus ?rm - room)
    )

    (:capabilities organization equipmentsearch sndmessage recharger equipmentcheck)

    (:task CheckRobotBattery :parameters (?r - robot ?batt - battery))
    (:method check-battery
        :parameters (?r - robot ?batt - battery) 
        :task (CheckRobotBattery ?r ?batt)
        :subtasks (and 
            (check-robot-battery ?r ?batt)
        )
    )
    (:action check-robot-battery 
        :parameters (?r - robot ?batt - battery)
        :required-capabilities (organization)
        :effect( and
            (batterybelow15 ?r ?batt)
        )
    )

    (:task RechargeAndGoBack :parameters (?r - robot ?recrm - room ?previousrm - room ?batt - battery))
    (:method recharge-and-go-back
        :parameters (?r - robot ?recrm - room ?previousrm - room ?batt - battery)
        :task (RechargeAndGoBack ?r ?recrm ?previousrm ?batt)
        :precondition ( and (batterybelow15 ?batt))
        :subtasks ( and
            (go-to-recharge-station ?r ?recrm)
            (wait-full-battery ?r ?batt)
            (go-back-to-room ?r ?previousrm)
        )
    )
    (:action go-to-recharge-station
        :parameters (?r - robot ?recrm - room)
        :required-capabilities (organization)
    )
    (:action wait-full-battery 
        :parameters (?r - robot ?batt - battery)
        :required-capabilities (recharger)
        :effect ( and
            (assign (recharge ?batt) 100)
        )
    )
    (:action go-back-to-room-from-recharge
        :parameters (?r - robot ?previousrm - room)
        :required-capabilities(organization)
    )

    (:task CheckEquipments :parameters (?r - robot ?eqp - equipment))
    (:method check-equipment
        :parameters (?r - robot ?eqp - equipment)
        :task (CheckEquipments ?r ?eqp)
        :subtasks (and
            (check-equipment ?r ?eqp)
        )
    )
    (:action check-equipment
        :parameters (?r - robot ?eqp - equipment)
        :required-capabilities(equipmentcheck)
    )

    (:task GetEquipment :parameters (?r - robot ?eqrm - room ?previousrm - room))
    (:method find-equipment
        :parameters (?r - robot ?eqrm - room ?previousrm - room)
        :task (GetEquipment ?r ?eqrm ?previousrm)
        :precondition (and (not (equipmentok ?r)))
        :subtasks (and
            (get-equipment ?r ?eqrm)
        )
    )
    (:action get-equipment
        :parameters (?r - robot ?eqrm - room)
        :required-capabilities (equipmentsearch)
        :effect (and
            (equipmentok ?r)
        )
    )
    (:action go-back-to-room
        :parameters (?r -robot ?previousrm - room)
        :required-capabilities(organization)
    )

    (:task EnterRoom :parameters (?r - robot ?rm - room))
    (:method enter-room
       :parameters (?r - robot ?rm - room)
       :task (EnterRoom ?r ?rm)
       :precondition (and (not (occupied ?rm)))
       :subtasks (and
 	        (mark-room ?r ?rm)
	    )
    )
    (:action mark-room
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
        :effect (and
            (occupied ?rm)
        )
    )

    (:task ChangeCovers :parameters (?r - robot ?rm - room))
    (:method covers-change
        :parameters (?r - robot ?rm - room)
        :task (ChangeCovers ?r ?rm)
        :subtasks (and
            (change-covers ?r ?rm)
        )
    )
    (:action change-covers
        :parameters (?r - robot ?rm - room)
        :required-capabilities (organization)
    )

    (:task SendFailCovers :parameters (?r - robot ?rm - room))
    (:method send-fail-covers
        :parameters (?r - robot ?rm - room)
        :task (SendFailCovers)
        :subtasks (and
            (send-msg-fail-covers ?r ?rm)
        )
    )
    (:action send-msg-fail-covers
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
    )

    (:task VacuumFloor :parameters (?r - robot ?rm - room))
    (:method floor-vacuum
        :parameters (?r - robot ?rm - room)
        :task (VacuumFloor ?r ?rm)
        :subtasks (and
            (vacuum-floor ?r ?rm)
        )
    )
    (:action vacuum-floor
        :parameters (?r - robot ?rm - room)
        :required-capabilities (organization)
    )

    (:task SendFailVacuum:parameters (?r - robot ?rm - room))
    (:method send-fail-vacuum
        :parameters (?r - robot ?rm - room)
        :task (SendFailVacuum)
        :subtasks (and
            (send-msg-fail-vacuum ?r ?rm)
        )
    )
    (:action send-msg-fail-vacuum
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
    )

    (:task WipeFloor :parameters (?r - robot ?rm - room))
    (:method floor-wiping
        :parameters (?r - robot ?rm - room)
        :task (WipeFloor ?r ?rm)
        :subtasks (and
            (wipe-floor ?r ?rm)
        )
    )
    (:action wipe-floor
        :parameters (?r - robot ?rm - room)
        :required-capabilities (organization)
    )

    (:task SendFailWipe:parameters (?r - robot ?rm - room))
    (:method send-fail-wipe
        :parameters (?r - robot ?rm - room)
        :task (SendFailWipe)
        :subtasks (and
            (send-msg-fail-wipe ?r ?rm)
        )
    )
    (:action send-msg-fail-wipe
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
    )

    (:task SterilizeRoom :parameters (?r - robot ?rm - room))
    (:method room-sterilization
        :parameters (?r - robot ?rm - room)
        :task (SterilizeRoom ?r ?rm)
        :subtasks (and
            (sterilize-room ?r ?rm)
        )
    )
    (:action sterilize-room
        :parameters (?r - robot ?rm - room)
        :required-capabilities (organization)
        :effect (and
            (assign (staphylococcus ?rm) 0)
        )
    )

    (:task SendFailSterilize:parameters (?r - robot ?rm - room))
    (:method send-fail-sterilize
        :parameters (?r - robot ?rm - room)
        :task (SendFailSterilize)
        :subtasks (and
            (send-msg-fail-sterilize ?r ?rm)
        )
    )
    (:action send-msg-fail-sterilize
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
    )

    (:task AbortMission :parameters (?r - robot ?rm - room))
    (:method abort-mission
       :parameters (?r - robot ?rm - room)
       :task (AbortMission ?r ?rm)
       :precondition (and (occupied ?rm))
       :subtasks (and
 	        (msg-to-mgr ?r ?rm)
	    )
    )
    (:action msg-to-mgr
        :parameters (?r - robot ?rm - room)
        :required-capabilities (sndmessage)
        :effect ()
    )

)